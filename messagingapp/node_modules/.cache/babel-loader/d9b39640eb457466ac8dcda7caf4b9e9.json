{"ast":null,"code":"var _jsxFileName = \"/Users/nedmcculloch/Desktop/JSapps/messageapp/messagingapp/src/components/NewConversationModal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Modal, Form, Button } from \"react-bootstrap\";\nimport { contacts } from \"../contexts/ContactsProvider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function NewConversationModal() {\n  _s();\n\n  const [selectedContactIds, setSelectedContactIds] = useState([]);\n\n  function handleCheckboxChange(id) {\n    setSelectedContactIds(prevSelectedContactIds => {});\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      children: \"Create Conversation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit,\n        children: [contacts.map(contact => /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: contact.id,\n          children: /*#__PURE__*/_jsxDEV(Form.Check, {\n            type: \"checkbox\",\n            value: selectedContactIds.includes(contact.id),\n            label: contact.name,\n            onChange: () => handleCheckboxChange(contact.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 15\n          }, this)\n        }, contact.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(NewConversationModal, \"ebBIDk1ZbeBsGniEDXoWyFdvubM=\");\n\n_c = NewConversationModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewConversationModal\");","map":{"version":3,"sources":["/Users/nedmcculloch/Desktop/JSapps/messageapp/messagingapp/src/components/NewConversationModal.js"],"names":["React","useState","Modal","Form","Button","contacts","NewConversationModal","selectedContactIds","setSelectedContactIds","handleCheckboxChange","id","prevSelectedContactIds","handleSubmit","map","contact","includes","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,KAAT,EAAgBC,IAAhB,EAAsBC,MAAtB,QAAoC,iBAApC;AACA,SAASC,QAAT,QAAyB,8BAAzB;;;AAEA,eAAe,SAASC,oBAAT,GAAgC;AAAA;;AAC7C,QAAM,CAACC,kBAAD,EAAqBC,qBAArB,IAA8CP,QAAQ,CAAC,EAAD,CAA5D;;AAEA,WAASQ,oBAAT,CAA8BC,EAA9B,EAAkC;AAChCF,IAAAA,qBAAqB,CAACG,sBAAsB,IAAI,CAE/C,CAFoB,CAArB;AAGD;;AAED,sBACE;AAAA,4BACE,QAAC,KAAD,CAAO,MAAP;AAAc,MAAA,WAAW,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,KAAD,CAAO,IAAP;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,QAAQ,EAAEC,YAAhB;AAAA,mBACGP,QAAQ,CAACQ,GAAT,CAAcC,OAAD,iBACZ,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,SAAS,EAAEA,OAAO,CAACJ,EAA/B;AAAA,iCACE,QAAC,IAAD,CAAM,KAAN;AACE,YAAA,IAAI,EAAC,UADP;AAEE,YAAA,KAAK,EAAEH,kBAAkB,CAACQ,QAAnB,CAA4BD,OAAO,CAACJ,EAApC,CAFT;AAGE,YAAA,KAAK,EAAEI,OAAO,CAACE,IAHjB;AAIE,YAAA,QAAQ,EAAE,MAAMP,oBAAoB,CAACK,OAAO,CAACJ,EAAT;AAJtC;AAAA;AAAA;AAAA;AAAA;AADF,WAAwCI,OAAO,CAACJ,EAAhD;AAAA;AAAA;AAAA;AAAA,gBADD,CADH,eAWE,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAoBD;;GA7BuBJ,oB;;KAAAA,oB","sourcesContent":["import React, { useState } from \"react\";\nimport { Modal, Form, Button } from \"react-bootstrap\";\nimport { contacts } from \"../contexts/ContactsProvider\";\n\nexport default function NewConversationModal() {\n  const [selectedContactIds, setSelectedContactIds] = useState([]);\n\n  function handleCheckboxChange(id) {\n    setSelectedContactIds(prevSelectedContactIds => {\n      \n    })\n  }\n\n  return (\n    <>\n      <Modal.Header closeButton>Create Conversation</Modal.Header>\n      <Modal.Body>\n        <Form onSubmit={handleSubmit}>\n          {contacts.map((contact) => (\n            <Form.Group controlId={contact.id} key={contact.id}>\n              <Form.Check\n                type=\"checkbox\"\n                value={selectedContactIds.includes(contact.id)}\n                label={contact.name}\n                onChange={() => handleCheckboxChange(contact.id)}\n              />\n            </Form.Group>\n          ))}\n          <Button type=\"submit\">Create</Button>\n        </Form>\n      </Modal.Body>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}